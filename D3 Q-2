import cv2
import numpy as np
import matplotlib.pyplot as plt

def canny_edge_detection(img, low_threshold=50, high_threshold=150):
    # Convert to grayscale if the image is not already in grayscale
    if len(img.shape) == 3:
        img_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    else:
        img_gray = img
    
    # Apply GaussianBlur to reduce noise and improve edge detection
    blurred_img = cv2.GaussianBlur(img_gray, (5, 5), 1.4)
    
    # Apply Canny Edge Detection
    edges = cv2.Canny(blurred_img, low_threshold, high_threshold)
    
    return edges

# Load the image
img = cv2.imread(r'C:\Users\HP\Pictures\Screenshots\Screenshot (220).png')

# Detect edges using Canny edge detection
edges = canny_edge_detection(img)

# Display the results
plt.figure(figsize=(10, 5))
plt.subplot(1, 2, 1)
plt.title("Original Image")
plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
plt.subplot(1, 2, 2)
plt.title("Canny Edges")
plt.imshow(edges, cmap='gray')
plt.show()
